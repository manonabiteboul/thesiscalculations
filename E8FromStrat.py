import math
from collections import Counter
import itertools
import re
from tensor_wedge import wedge2
from compare import checker
from compare import order
from compare import expand
from tensor_wedge import latex
from compare import dimChecker
from compare import classifyIncomplete
#from compare import classifyIncomplete2
from compare import classify
from compare import perm
from tensor_wedge import concat
from remove_tensor_A1 import removeFirstA1
from remove_tensor_A1 import removeA1
from remove_tensor_A1 import diagA1
from tensor_wedge import printLE8

def lambda2fct(test):
    soltest=[]
    for i in range(0,len(test)):
        if test[i][0]==0:
            x=(test[i][1],)
            for j in range(2,len(test[i])):
                x=x+(test[i][j],)
            soltest.append(x)
    return(soltest)

def lambda5fct(test):
    soltest=[]
    for i in range(0,len(test)):
        if test[i][0]==1:
            x=(test[i][1],)
            for j in range(2,len(test[i])):
                x=x+(test[i][j],)
            soltest.append(x)
    return(soltest)

###############################################################
###############################################################
###########A18
###############################################################
###############################################################

a=expand("[(2,0,0,0,0,0,0,0)/(0,2,0,0,0,0,0,0)/(0,0,2,0,0,0,0,0)/(0,0,0,2,0,0,0,0)/(0,0,0,0,2,0,0,0)/(0,0,0,0,0,2,0,0)/(0,0,0,0,0,0,2,0)/(0,0,0,0,0,0,0,2)/(1,1,1,1,0,0,0,0)/(1,1,0,0,1,1,0,0)/(1,1,0,0,0,0,1,1)/(1,0,1,0,1,0,0,1)/(1,0,1,0,0,1,1,0)/(1,0,0,1,1,0,1,0)/(1,0,0,1,0,1,0,1)/(0,0,1,1,1,1,0,0)/(0,0,1,1,0,0,1,1)/(0,0,0,0,1,1,1,1)/(0,1,1,0,1,0,0,1)/(0,1,1,0,0,1,1,0)/(0,1,0,1,1,0,1,0)/(0,1,0,1,0,1,0,1)]")
print("A18")
basisA18=[[0]]
basisA18.append(a)

###############################################################
###############################################################
###########A17
###############################################################
###############################################################

a=[0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0]
orderList = order(7)
basisA17=[[0]]
#We make the basis from basis of A18

a[0]=removeA1(basisA18[1],2)
a[1]=removeA1(basisA18[1],3)
a[2]=diagA1(basisA18[1],2,3)
a[3]=diagA1(basisA18[1],3,4)
a[4]=diagA1(basisA18[1],3,5)
a[5]=diagA1(basisA18[1],1,2)

basisA17.append(a[0])
basisA17.append(a[1])
basisA17.append(a[2])
basisA17.append(a[3])
basisA17.append(a[4])
basisA17.append(a[5])

for i in range(1,1):
    print(i)
    print(latex(basisA17[i]))



#In D8

a[1]=expand("[(1,1,0,0,0,0,0)/(0,0,1,1,0,0,0)/(0,0,0,0,1,1,0)/(0,0,0,0,0,1)^2]")

a[2]=expand("[(1,1,0,0,0,0,0)/(0,0,1,1,0,0,0)/(0,0,0,0,1,1,0)/(0,0,0,0,0,2)/(0,0,0,0,0,0,0)]")
orderList=order(7)

#print("In D8")
w=[0,0,0,0,0]
w[1]=expand("[(2,0,0,0,0,0,0)/(0,2,0,0,0,0,0)/(1,1,1,1,0,0,0)/(1,1,0,0,1,1,0)/(1,1,0,0,0,0,1)^2/(0,0,2,0,0,0,0)/(0,0,0,2,0,0,0)/(0,0,1,1,1,1,0)/(0,0,1,1,0,0,1)^2/(0,0,0,0,2,0,0)/(0,0,0,0,0,2,0)/(0,0,0,0,1,1,1)^2/(0,0,0,0,0,0,2)/(0,0,0,0,0,0,0)^3]")
w[2]=expand("[(2,0,0,0,0,0,0)/(0,2,0,0,0,0,0)/(1,1,1,1,0,0,0)/(1,1,0,0,1,1,0)/(1,1,0,0,0,0,2)/(1,1,0,0,0,0,0)/(0,0,2,0,0,0,0)/(0,0,0,2,0,0,0)/(0,0,1,1,1,1,0)/(0,0,1,1,0,0,2)/(0,0,1,1,0,0,0)/(0,0,0,0,2,0,0)/(0,0,0,0,0,2,0)/(0,0,0,0,1,1,2)/(0,0,0,0,1,1,0)/(0,0,0,0,0,0,2)^2]")



#print(classifyIncomplete(w[1],basisA17,orderList))
#print(classifyIncomplete(w[2],basisA17,orderList))






###############################################################
###############################################################
###########A16
###############################################################
###############################################################


orderList = order(6)

a=[0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0]
additional = []
basisA16 =[[0]]

#in A1E7
a[1]=expand("[(0,1,0,2,0,1)/(0,0,1,2,1,0)/(0,0,0,1,1,2)/(0,0,1,1,0,2)/(0,2,0,0,0,0)/(0,0,2,0,0,0)/(0,0,0,2,0,0)^2/(0,0,0,0,2,0)/(0,0,0,0,0,2)^2/(0,1,1,1,0,1)/(0,1,1,0,1,1)/(0,1,0,1,1,1)/(0,1,0,0,0,1)/(0,0,1,0,1,0)/(0,0,1,1,0,0)/(0,0,0,1,1,0)/(2,0,0,0,0,0)/(1,1,1,1,0,0)/(1,1,0,1,1,0)/(1,1,0,0,0,2)/(1,1,0,0,0,0)/(1,0,1,1,0,1)/(1,0,1,0,1,1)/(1,0,0,2,0,1)/(1,0,0,0,0,1)/(1,0,0,1,1,1)]")

#a[1]=expand("[(1,1,1,1,0,0)/(1,1,0,1,1,0)/(1,1,0,0,1,1)/(2,0,0,0,0,0)/(0,2,0,0,0,0)/(0,0,2,0,0,0)/(0,0,0,2,0,0)^2/(0,0,1,2,1,0)/(0,0,1,0,1,0)/(0,0,1,1,1,1)/(0,0,0,0,2,0)^2/(0,0,0,1,2,1)/(0,0,0,1,0,1)/(0,0,0,0,0,2)/(1,0,1,1,0,1)/(1,0,1,0,2,0)/(1,0,1,0,0,0)/(1,0,0,2,1,0)/(1,0,0,0,1,0)/(1,0,0,1,1,1)/(0,1,1,1,0,1)/(0,1,1,0,2,0)/(0,1,1,0,0,0)/(0,1,0,2,1,0)/(0,1,0,0,1,0)/(0,1,0,1,1,1)]")


a[2]=expand("[(0,2,0,0,0,0)/(0,0,2,0,0,0)/(0,0,0,2,0,0)/(0,0,0,0,2,0)/(0,0,0,0,0,2)/(0,0,1,1,1,1)/(0,1,1,0,1,0)^2/(0,1,1,0,0,1)^2/(0,1,0,1,1,0)^2/(0,1,0,1,0,1)^2/(0,0,1,1,0,0)^4/(0,0,0,0,1,1)^4/(0,0,0,0,0,0)^6/(2,0,0,0,0,0)/(1,1,1,1,0,0)/(1,1,0,0,1,1)/(1,1,0,0,0,0)^4/(1,0,1,0,1,0)^2/(1,0,0,1,1,0)^2/(1,0,1,0,0,1)^2/(1,0,0,1,0,1)^2]")


a[3]=expand("[(0,0,6,0,0,0)/(0,0,4,0,0,2)/(0,0,4,1,1,0)/(0,1,3,1,0,1)/(0,1,3,0,1,1)/ (0,0,0,1,1,2)/(0,2,0,0,0,0)/(0,0,2,0,0,0)/(0,0,0,2,0,0)/(0,0,0,0,2,0)/(0,0,0,0,0,2)/(2,0,0,0,0,0)/(1,1,4,0,0,0)/(1,1,0,1,1,0)/(1,1,0,0,0,2)/(1,0,3,1,0,1)/(1,0,3,0,1,1)]")



a[4]=expand("[(0,2,0,0,0,0)/(0,0,2,0,0,0)/(0,0,0,2,0,0)/(0,0,0,0,2,0)^3/(0,0,0,0,0,2)^3/ (0,0,0,0,2,2)/(0,0,1,1,2,0)/(0,0,1,1,0,2)/(0,1,1,0,1,1)^2/(0,1,0,1,1,1)^2/(0,0,1,1,0,0)^2/(0,0,0,0,0,0)/(2,0,0,0,0,0)/(1,1,1,1,0,0)/(1,1,0,0,2,0)/(1,1,0,0,0,2)/(1,1,0,0,0,0)^2/(1,0,1,0,1,1)^2/(1,0,0,1,1,1)^2]")
a[4]=expand("[(0,2,0,0,0,0)/(0,0,2,0,0,0)/(0,0,0,2,0,0)/(0,0,0,0,2,0)^3/(0,0,0,0,0,2)^3/(0,0,0,0,2,2)/(0,0,1,1,2,0)/(0,0,1,1,0,2)/(0,1,1,0,1,1)^2/(0,1,0,1,1,1)^2/(0,0,1,1,0,0)^2/(0,0,0,0,0,0)/(2,0,0,0,0,0)/(1,1,1,1,0,0)/(1,1,0,0,2,0)/(1,1,0,0,0,2)/(1,1,0,0,0,0)^2/(1,0,1,0,1,1)^2/(1,0,0,1,1,1)^2]")
 
#a[4]=expand("[(2,0,0,0,0)/(0,2,0,0,0)/(0,0,2,0,0)/(0,0,0,2,0)^3/(0,0,0,0,2)^3/ (0,0,0,2,2)/(0,1,1,2,0)/(0,1,1,0,2)/(1,1,0,1,1)^2/(1,0,1,1,1)^2/(0,1,1,0,0)^2/(0,0,0,0,0)]")

a[5]=expand("[(0,0,0,0,1,3)/(0,1,1,0,0,2)/(0,1,0,1,0,2)/(0,0,1,1,0,2)/(0,2,0,0,0,0)/ (0,0,2,0,0,0)/(0,0,0,2,0,0)/(0,0,0,0,2,0)/(0,0,0,0,0,2)^3/(0,1,1,0,1,1)/(0,0,1,1,1,1)/(0,1,0,1,1,1)/(0,1,1,0,0,0)/(0,1,0,1,0,0)/(0,0,1,1,0,0)/(0,0,0,0,1,1)^2/(2,0,0,0,0,0)/(1,1,1,1,0,0)/(1,1,0,0,1,1)/(1,1,0,0,0,2)/(1,1,0,0,0,0)/(1,0,1,0,1,1)/(1,0,1,0,0,2)/(1,0,1,0,0,0)/(1,0,0,1,1,1)/(1,0,0,1,0,2)/(1,0,0,1,0,0)]")



a[6]=expand("[(2,0,0,0,0,0)/(0,2,0,0,0,0)^2/(0,0,2,0,0,0)/(0,0,0,2,0,0)/(0,0,0,0,2,0)/(0,0,0,0,0,2)/(1,2,0,0,0,0)^2/(1,0,0,0,0,0)^2/(1,0,1,1,0,0)^2/(1,0,0,0,1,1)^2/(1,1,1,0,0,1)/(1,1,0,1,1,0)/(1,1,1,0,1,0)/(1,1,0,1,0,1)/(0,2,1,1,0,0)/(0,0,1,1,0,0)/(0,2,0,0,1,1)/(0,0,0,0,1,1)/(0,0,1,1,1,1)/(0,1,1,0,0,1)^2/(0,1,0,1,1,0)^2/(1,1,1,0,1,0)/(1,1,0,1,0,1)/(0,0,0,0,0,0)^3]")

a[6]=expand("[(1,1,1,1,0,0)/(1,1,0,0,1,0)^2/(1,1,0,0,0,2)/(1,1,0,0,0,0)/(2,0,0,0,0,0)/(0,2,0,0,0,0)/(0,0,2,0,0,0)/(0,0,0,2,0,0)/(0,0,1,1,1,0)^2/(0,0,1,1,0,2)/(0,0,1,1,0,0)/(0,0,0,0,2,0)/(0,0,0,0,0,0)^3/(0,0,0,0,1,2)^2/(0,0,0,0,1,0)^2/(0,0,0,0,0,2)^2/(1,0,1,0,1,1)/(1,0,1,0,0,1)^2/(1,0,0,1,1,1)/(1,0,0,1,0,1)^2/(0,1,1,0,1,1)/(0,1,1,0,0,1)^2/(0,1,0,1,1,1)/(0,1,0,1,0,1)^2]")


a[7]=expand("[(0,2,0,0,0,0)/(0,0,2,0,0,0)/(0,0,0,2,0,0)/(0,0,0,0,2,0)/(0,0,0,0,0,2)/(0,0,2,2,0,0)/(0,0,2,0,2,0)/(0,0,2,0,0,2)/(0,0,0,2,2,0)/(0,0,0,2,0,2)/ (0,0,0,0,2,2)/(0,1,1,1,1,1)^2/(2,0,0,0,0,0)/(1,1,2,0,0,0)/(1,1,0,2,0,0)/(1,1,0,0,2,0)/(1,1,0,0,0,2)/(1,0,1,1,1,1)^2]")


a[8]=expand("[(0,2,0,0,0,0)/(0,0,2,0,0,0)/(0,0,0,2,0,0)^2/(0,0,0,0,2,0)/(0,0,0,0,0,2)/(0,0,1,2,1,0)/(0,0,1,0,1,0)/(0,0,1,1,0,1)^2/(0,0,0,1,1,1)^2/(0,0,0,0,0,0)^3(0,1,1,1,0,0)^2/(0,1,1,0,1,1)/(0,1,0,2,0,1)/(0,1,0,0,0,1)/(0,1,0,1,1,0)^2/ (2,0,0,0,0,0)/(1,1,1,1,0,0)/(1,1,0,1,1,0)/(1,1,0,0,0,1)^2/(1,0,1,1,0,0)^2/(1,0,1,0,1,1)/(1,0,0,2,0,1)/(1,0,0,1,1,0)^2/(1,0,0,0,0,1)]")




a[9]=expand("[(0,2,0,0,0,0)/(0,0,2,0,0,0)/(0,0,0,2,0,0)^3/(0,0,0,0,2,0)/(0,0,0,0,0,2)/(0,0,1,2,1,0)/(0,0,1,0,1,0)/(0,0,1,2,0,1)/(0,0,1,0,0,1)/(0,0,0,2,1,1)/(0,0,0,0,1,1)/(0,1,1,2,0,0)/(0,1,1,0,0,0)/(0,1,0,2,0,1)/(0,1,1,0,1,1)/(0,1,0,2,1,0)/ (0,1,0,0,1,0)/(0,1,0,0,0,1)/(2,0,0,0,0,0)/(1,1,1,1,0,0)/(1,1,0,1,1,0)/(1,1,0,1,0,1)/(1,0,1,2,0,0)/(1,0,1,0,0,0)/(1,0,1,0,1,1)/(1,0,0,2,0,1)/(1,0,0,0,0,1)/(1,0,0,2,1,0)/(1,0,0,0,1,0)]")


for i in range(1,10):
    #print("i="+str(i))
    #print(dimChecker(a[i]))
    #checker(a[i], basis,order )
    basisA16.append(a[i])


#testing potential new A16
#other option for case 8
temp=expand("[(0,2,0,0,0,0)/(0,0,2,0,0,0)/(0,0,0,2,0,0)^2/(0,0,0,0,2,0)/(0,0,0,0,0,2)/(0,0,1,2,1,0)/(0,0,1,0,1,0)/(0,0,1,1,0,1)^2/(0,0,0,1,1,1)^2/(0,0,0,0,0,0)^3/(0,1,1,1,0,1)/(0,1,1,0,1,0)^2/(0,1,0,2,0,0)^2/(0,1,0,0,0,0)^2/(0,1,0,1,1,1)/ (2,0,0,0,0,0)/(1,1,1,1,0,0)/(1,1,0,1,1,0)/(1,1,0,0,0,1)^2/(1,0,1,1,0,1)/(1,0,1,0,1,0)^2/(1,0,0,2,0,0)^2/(1,0,0,0,0,0)^2/(1,0,0,1,1,1)]")
#print("checking")    
#print(checker(temp, basisA16,order ))
#print(dimChecker(temp))
basisA16.append(temp)
#print(len(basisA16))

#other option for case 9
temp=expand("[(0,2,0,0,0,0)/(0,0,2,0,0,0)/(0,0,0,2,0,0)^3/(0,0,0,0,2,0)/(0,0,0,0,0,2)/(0,0,1,2,1,0)/(0,0,1,0,1,0)/(0,0,1,2,0,1)/(0,0,1,0,0,1)/(0,0,0,2,1,1)/(0,0,0,0,1,1)/(0,1,1,1,1,0)/(0,1,1,1,0,1)/(0,1,0,1,1,1)/(0,1,0,3,0,0)/(0,1,0,1,0,0)^2/(2,0,0,0,0,0)/(1,1,1,1,0,0)/(1,1,0,1,1,0)/(1,1,0,1,0,1)/(1,0,1,1,1,0)/(1,0,1,1,0,1)/(1,0,0,1,1,1)/(1,0,0,3,0,0)/(1,0,0,1,0,0)^2]")
#print("checking")
#print(dimChecker(temp))
#o=order(6)
#print(checker(temp, basisA16,o))
basisA16.append(temp)
#print(len(basisA16))




#Redoing the A16 in A1A1D6

l1=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
l2=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
l5=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
l5b=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
L=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]

l1[1]=expand("[(4,0,0,0)/(0,1,1,0)/(0,0,0,2)]")
l5[1]=expand("[(3,1,0,1)/(3,0,1,1)]")
l5b[1]=expand("[(3,1,0,1)/(3,0,1,1)]")

l1[2]=expand("[(1,1,0,0)/(0,1,1,0)/(0,0,1,1)]")
l5[2]=expand("[(1,1,0,1)/(1,0,2,0)/(1,0,0,0)/(0,2,1,0)/(0,0,1,0)/(0,1,1,1)]")
l5b[2]=expand("[(1,1,1,0)/(1,0,1,1)/(0,2,0,1)/(0,0,0,1)/(0,1,2,0)/(0,1,0,0)]")

l1[3]=expand("[(1,1,0,0)/(0,0,1,1)^2]")
l5[3]=expand("[(1,0,1,1)^2/(0,1,2,0)/(0,1,0,0)/(0,1,0,2)/(0,1,0,0)]")
l5b[3]=expand("[(0,1,1,1)^2/(1,0,2,0)/(1,0,0,0)/(1,0,0,2)/(1,0,0,0)]")

l1[4]=expand("[(1,1,0,0)/(0,0,1,0)^2/(0,0,0,1)^2]")
l5[4]=expand("[(1,0,1,0)^2/(1,0,0,1)^2/(0,1,1,1)/(0,1,0,0)^4]")
l5b[4]=expand("[(0,1,1,0)^2/(0,1,0,1)^2/(1,0,1,1)/(1,0,0,0)^4]")

l1[5]=expand("[(1,1,0,0)/(0,0,1,1)/(0,0,0,2)/(0,0,0,0)]")
l5[5]=expand("[(1,0,1,1)/(1,0,0,2)/(1,0,0,0)/(0,1,1,1)/(0,1,0,2)/(0,1,0,0)]")
l5b[5]=expand("[(1,0,1,1)/(1,0,0,2)/(1,0,0,0)/(0,1,1,1)/(0,1,0,2)/(0,1,0,0)]")

l1[6]=expand("[(1,1,0,0)/(0,1,1,0)/(0,0,0,2)/(0,0,0,0)]")
l5[6]=expand("[(1,1,0,1)/(1,0,1,1)/(0,2,0,1)/(0,1,1,1)]")
l5b[6]=expand("[(1,1,0,1)/(1,0,1,1)/(0,2,0,1)/(0,1,1,1)]")

l1[7]=expand("[(1,1,0,0)/(0,0,1,0)^2/(0,0,0,2)/(0,0,0,0)]")
l5[7]=expand("[(1,0,1,1)/(1,0,0,1)^2/(0,1,1,1)/(0,1,0,1)^2]")
l5b[7]=expand("[(1,0,1,1)/(1,0,0,1)^2/(0,1,1,1)/(0,1,0,1)^2]")

l1[8]=expand("[(1,1,0,0)/(0,0,1,1)/(0,0,0,0)^4]")
l5[8]=expand("[(1,0,1,0)^2/(1,0,0,1)^2/(0,1,1,0)^2/(0,1,0,1)^2]")
l5b[8]=expand("[(1,0,1,0)^2/(1,0,0,1)^2/(0,1,1,0)^2/(0,1,0,1)^2]")

l1[9]=expand("[(1,1,0,0)/(0,0,2,0)/(0,0,0,2)/(0,0,0,0)^2]")
l5[9]=expand("[(1,0,1,1)^2/(0,1,1,1)^2]")
l5b[9]=expand("[(1,0,1,1)^2/(0,1,1,1)^2]")

l1[10]=expand("[(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)]")
l5[10]=expand("[(1,1,1,1)^2]")
l5b[10]=expand("[(1,1,1,1)^2]")

l1[11]=expand("[(3,1,0,0)/(0,0,1,1)]")
l5[11]=expand("[(4,0,1,0)/(0,2,1,0)/(3,1,0,1)]")
l5b[11]=expand("[(4,0,0,1)/(0,2,0,1)/(3,1,1,0)]")

l1[12]=expand("[(1,1,0,0)/(0,1,1,0)/(0,0,0,1)^2]")
l5[12]=expand("[(1,1,0,0)^2/(1,0,1,1)/(0,2,0,1)/(0,0,0,1)/(0,1,1,0)^2]")
l5b[12]=expand("[(1,1,0,1)/(1,0,1,0)^2/(0,2,0,0)^2/(0,0,0,0)^2/(0,1,1,1)]")

l1[13]=expand("[(1,1,0,0)/(0,0,1,1)/(0,0,0,1)^2]")
l5[13]=expand("[(1,0,1,0)^2/(1,0,0,2)/(1,0,0,0)/(0,1,1,1)/(0,1,0,1)^2]")
l5b[13]=expand("[(1,0,1,1)/(1,0,0,1)^2/(0,1,1,0)^2/(0,1,0,2)/(0,1,0,0)]")

l1[14]=expand("[(1,1,0,0)/(0,1,1,0)/(0,1,0,1)]")
l5[14]=expand("[(1,1,0,1)/(1,1,1,0)/(0,3,0,0)/(0,1,0,0)^2/(0,1,1,1)]")
l5b[14]=expand("[(1,2,0,0)/(1,0,0,0)/(1,0,1,1)/(0,2,0,1)/(0,0,0,1)/(0,2,1,0)/(0,0,1,0)]")

basis2=[[0]]
orderList6=order(6)

for i in range(1,15):
    l2[i]=wedge2(l1[i])

for i in range(1,15):
    temp=concat([(1,1)],l1[i])
    temp = temp+concat([(1,0)],l5[i])
    temp = temp+[(2,0,0,0,0,0),(0,2,0,0,0,0)]
    temp=temp+concat([(0,0)],l2[i])
    L[i] = temp+concat([(0,1)],l5[i])
    #print("i= "+str(i))
    #print(checker(L[i],basis2,orderList6))
    basis2.append(L[i])

#print("MOVING ON TO CASE b")

for i in range(1,15):
    temp=concat([(1,1)],l1[i])
    temp = temp+concat([(1,0)],l5b[i])
    temp = temp+[(2,0,0,0,0,0),(0,2,0,0,0,0)]
    temp=temp+concat([(0,0)],l2[i])
    L[i] = temp+concat([(0,1)],l5b[i])
    #print("i= "+str(i))
    t=checker(L[i],basis2,orderList6)
    #print(t)
    if t==-1:
        basis2.append(L[i])
#print(len(basis2))

basisTest=[[0]]
print("trying to make them equal")
for i in range(1,15):
    temp=concat([(1,1)],l1[i])
    temp = temp+concat([(1,0)],l5[i])
    temp = temp+[(2,0,0,0,0,0),(0,2,0,0,0,0)]
    temp=temp+concat([(0,0)],l2[i])
    L[i] = temp+concat([(0,1)],l5b[i])
    print("i= "+str(i))
    t=checker(L[i],basisTest,orderList6)
    print(t)
    if t==-1:
        basisTest.append(L[i])
#print(len(basis2))


#A15 is in D6
print("A15 is in D6")        
t=removeA1(basisA18[1],2)
t2=diagA1(t,2,3)      
print(checker(t2,basis2,orderList6))
#basis2.append(t2)

t=removeA1(basisA18[1],2)
t2=removeA1(t,2)   
print(checker(t2,basis2,orderList6))
basis2.append(t2)





#A15 in A1D6 with diag
print("A15 is in A1D6 with")        
t=diagA1(basisA18[1],2,3)
t2=diagA1(t,6,7)      
#print(checker(t2,basis2,orderList6))
basis2.append(t2)

print("diag(2,7,8)")      
t=diagA1(basisA18[1],2,7)
t2=diagA1(t,1,7)
#print(checker(t2,basis2,orderList6))
#basis2.append(t2)

t=diagA1(basisA18[1],2,3)
t2=removeA1(t,7)
print(checker(t2,basis2,orderList6))
basis2.append(t2)

t=diagA1(basisA18[1],2,7)
t2=removeA1(t,7)
#print(t2[1])
#print(checker(t2,basis2,orderList6))
basis2.append(t2)





#In A1B4 in A1F4

temp=expand("[(1,1,1,0,1,0)/(1,1,1,0,0,1)/(1,1,0,1,1,0)/(1,1,0,1,0,1)/(1,1,1,1,0,0)/(1,1,0,0,1,1)/(1,1,0,0,0,0)^2/(1,3,0,0,0,0)/(0,2,1,1,0,0)/(0,2,0,0,1,1)/(0,2,0,0,0,0) /(0,2,1,0,1,0)/(0,2,1,0,0,1)/(0,2,0,1,1,0)/(0,2,0,1,0,1)/(0,2,0,0,0,0)^2/(0,0,2,0,0,0)/(0,0,0,2,0,0)/(0,0,0,0,2,0)/(0,0,0,0,0,2)/(0,0,1,1,1,1)/(0,0,1,1,0,0)/(0,0,0,0,1,1)/ (0,0,1,0,1,0)/(0,0,1,0,0,1)/(0,0,0,1,1,0)/(0,0,0,1,0,1)/(2,0,0,0,0,0)]")
print("In A1B4 in A1F4")
print(dimChecker(temp))
print(checker(temp,basis2,orderList6))



# In G2C3
print("in G2C3")

temp2=expand("[ (1,0,2,1,0,0)/(1,1,1,1,0,0)/(1,0,2,0,1,0)/(1,1,1,0,1,0)/(1,0,2,0,0,1)/(1,1,1,0,0,1)/(1,0,0,1,1,1)/(1,0,0,1,0,0)/(1,0,0,0,1,0)/(1,0,0,0,0,1)/ (0,0,2,0,0,0)^2/(0,1,1,0,0,0)^2/(0,0,2,1,1,0)/(0,1,1,1,1,0)/(0,0,2,1,0,1)/(0,1,1,1,0,1)/(0,0,2,0,1,1)/(0,1,1,0,1,1)/(0,2,0,0,0,0)/(0,0,2,0,0,0)/ (0,1,3,0,0,0)/(0,0,0,2,0,0)/(0,0,0,0,2,0)/(0,0,0,0,0,2)/(0,0,0,1,1,0)/(0,0,0,1,0,1)/ (0,0,0,0,1,1)/(2,0,0,0,0,0)]")
print(dimChecker(temp2))
print(checker(temp2,basis2,orderList6))















#In E7
print("In E7:")

orderList6=order(6)

tester1 = removeA1(basisA18[1],1)
tester1= diagA1(tester1,1,2)
print(checker(tester1,basisA16,orderList6))
print(dimChecker(tester1))

tester2 = removeA1(basisA18[1],1)
tester2= removeA1(tester1,1)
print(checker(tester2,basisA16,orderList6))
print(dimChecker(tester2))




#InA1E7withdiag

orderList6=order(6)
#print("A16 in A17 with diag")
tester1 = diagA1(basis2[1],1,2)
tester2 = diagA1(basis2[1],1,3)
tester3 = diagA1(basis2[2],1,2)
#print(checker(tester1,basis2,orderList6))
#print(checker(tester2,basis2,orderList6))
#print(checker(tester3,basis2,orderList6))

#print(len(basisA16))
temp=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
testBasisA16=[[0]]
#Removing two
temp[0]=removeA1(basisA18[1],1)
a[0]=removeA1(temp[0],1)

temp[1]=removeA1(basisA18[1],1)
a[1]=removeA1(temp[1],2)

temp[2]=removeA1(basisA18[1],3)
a[2]=removeA1(temp[2],3)

temp[3]=removeA1(basisA18[1],3)
a[3]=removeA1(temp[3],4)

#Diag of 3 A1
temp[4]=diagA1(basisA18[1],1,2)
a[4]=diagA1(temp[4],1,2)

temp[5]=diagA1(basisA18[1],1,3)
a[5]=diagA1(temp[5],1,3)

temp[6]=diagA1(basisA18[1],1,3)
a[6]=diagA1(temp[6],1,4)

temp[7]=diagA1(basisA18[1],3,4)
a[7]=diagA1(temp[7],1,4)

temp[8]=diagA1(basisA18[1],3,5)
a[8]=diagA1(temp[8],1,6)



#Diag 2 and remove one

temp[9]=diagA1(basisA18[1],1,2)
a[9]=removeA1(temp[9],2)

temp[9]=diagA1(basisA18[1],3,4)
a[10]=removeA1(temp[9],2)

temp[9]=diagA1(basisA18[1],3,4)
a[11]=removeA1(temp[9],4)

temp[9]=diagA1(basisA18[1],3,5)
a[12]=removeA1(temp[9],2)

temp[9]=diagA1(basisA18[1],3,5)
a[13]=removeA1(temp[9],4)

temp[9]=diagA1(basisA18[1],3,5)
a[14]=removeA1(temp[9],6)

for i in range(0,15):
    print("Case "+str(i))
    t=checker(a[i],basis2,orderList6)
    print(t)
    if t==-1:
        #basisA16.append(a[i])
        basis2.append(a[i])
        #print("it's index in basisA16:")
        #print(checker(a[i],basis2,orderList6))
#print("len ="+str(len(basis2)))

#In G2F4
#print("G2F4")
t=expand("[(0,2,1,1,0,0)/(0,2,0,0,1,1)/(0,2,0,0,0,0)/(1,1,1,1,0,0)/(1,1,0,0,1,1)/(1,1,0,0,0,0)/(0,2,1,0,1,0)/(0,2,1,0,0,1)/(0,2,0,1,1,0)/(0,2,0,1,0,1)/(1,1,1,0,1,0)/(1,1,1,0,0,1)/(1,1,0,1,1,0)/(1,1,0,1,0,1)/(0,2,0,0,0,0)/(1,1,0,0,0,0)/(2,0,0,0,0,0)/(0,2,0,0,0,0)/(1,3,0,0,0,0)/(0,0,2,0,0,0)/(0,0,0,2,0,0)/(0,0,1,1,1,1)/(0,0,1,1,0,0)/(0,0,0,0,2,0)/(0,0,0,0,0,2)/(0,0,0,0,1,1)/(0,0,1,0,1,0)/(0,0,1,0,0,1)/(0,0,0,1,1,0)/(0,0,0,1,0,1)]")
#print(checker(t,basisA16,orderList))


#In D8
        
#In D8
d=[0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0]
sol=[0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0]
e=[0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0]


d[1]=expand("[(1,1,0,0,0,0)/(0,0,1,1,0,0)/(0,0,0,0,1,1)/(0,0,0,0,0,0)^4]")
d[2]=expand("[(1,1,0,0,0,0)/(0,0,1,1,0,0)/(0,0,0,0,1,1)^2]")
d[3]=expand("[(1,1,0,0,0,0)/(0,0,1,1,0,0)/(0,0,0,0,1,1)/(1,0,1,0,0,0)]")
d[4]=expand("[(1,1,0,0,0,0)/(0,0,1,1,0,0)/(0,0,0,0,1,1)/(0,0,0,0,0,1)^2]")
d[5]=expand("[(1,1,0,0,0,0)/(0,0,1,1,0,0)/(0,0,0,1,1,0)/(0,0,0,0,0,1)^2]")
d[6]=expand("[(1,1,0,0,0,0)/(0,0,1,1,0,0)/(0,0,0,0,1,0)^2/(0,0,0,0,0,1)^2]")
d[7]=expand("[(1,0,0,0,0,0)^2/(0,1,1,0,0,0)/(0,0,0,1,1,0)/(0,0,0,0,0,2)/(0,0,0,0,0,0)]")
d[8]=expand("[(1,1,0,0,0,0)/(0,1,1,0,0,0)/(0,0,0,1,1,0)/(0,0,0,0,0,2)/(0,0,0,0,0,0)]")
d[9]=expand("[(1,0,0,0,0,1)/(0,1,1,0,0,0)/(0,0,0,1,1,0)/(0,0,0,0,0,2)/(0,0,0,0,0,0)]")


for i in range(1,10):
        sol[i]= wedge2(d[i])


for i in range(1,1):
        print(i)
        print(classifyIncomplete(sol[i],basisA16,orderList))
        


print("LEN:"+str(len(basis2)))

#//////////////////////////////////////////////////////////////////////////////////////////////////////////
#//////////////////////////////////////////////////////////////////////////////////////////////////////////
#A15 //////////////////////////////////////////////////////////////////////////////////////////////////////
#//////////////////////////////////////////////////////////////////////////////////////////////////////////
#//////////////////////////////////////////////////////////////////////////////////////////////////////////


#In A1E7



#A14inE7 with final order
orderList = order(4)
a=[0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0]
lambda1=[0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0]
lambda2=[0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0]
lambda5=[0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0]
LE8=[0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0]

additional = []




#1&      $ (2,1,1)$		&  $
a[9]=expand("[(0,4,2,0)/(0,4,0,2)/(0,2,2,2)/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)/(1,2,1,2)/(1,4,1,0)/(1,0,3,0)]")
lambda1[9]=expand("[(2,1,1)]")


#2&      $ (2,2,0)/(0,0,2)$		&  $
a[10]=expand("[(0,4,2,0)/(0,2,4,0)/(1,3,1,1)/(1,1,3,1)/(0,2,2,2)/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)]")
lambda1[10]=expand("[(2,2,0)/(0,0,2)]")


#3&      $ (3,1,0)/(0,1,1)$		&  $
a[11]=expand("[(0,6,0,0)/(0,4,2,0)/(0,3,2,1)/(0,3,0,1)/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)^2/(0,0,0,2)/  (1,3,2,0)/(1,4,0,1)/(1,0,2,1)/(1,3,0,0)]")
lambda1[11]=expand("[(3,1,0)/(0,1,1)]")


#a[4]=expand("[(0,6,0,0)/(0,4,2,0)/(0,3,2,1)/(0,3,0,1)/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)^2/(0,0,0,2)/ (1,4,1,0)/(1,3,1,1)/(1,0,3,0)/(1,0,1,0)]")


#4&      $ (3,1,0)/(1,0,1)$		&  $
a[12]=expand("[  (0,6,0,0)/(0,4,2,0)/(0,4,1,1)/(0,2,1,1)/(2,0,0,0)/(0,2,0,0)^2/(0,0,2,0)/(0,0,0,2)/ (1,4,1,0)/(1,2,1,0)/(1,4,0,1)/(1,0,2,1)]")
lambda1[12]=expand("[(3,1,0)/(1,0,1)]")


#5&      $ (3,1,0)/(0,0,1)^2$		&  $
a[13]=expand("[(0,6,0,0)/(0,4,2,0)/(0,3,1,1)^2/(1,3,1,0)^2/(1,4,0,1)/(1,0,2,1)/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)/(0,0,0,0)^3]")
lambda1[13]=expand("[(3,1,0)/(0,0,1)^2]")


#6&      $ (3,1,0)/(0,0,2)/$		&  $
a[14]=expand("[(0,6,0,0)/(0,4,2,0)/(0,3,1,2)/(1,3,1,1)/(1,4,0,1)/(0,3,1,0)/(1,0,2,1)/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)^2]")
lambda1[14]=expand("[(3,1,0)/(0,0,2)/(0,0,0)]")

#7&      $ (3,0,0)^2/(0,1,1)$		&  $
a[1]=expand("[(0,6,0,0)/(0,4,0,0)^3/(0,3,1,1)^2/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)/(1,4,0,1)/(1,3,1,0)^2/(1,0,0,1)^3/(0,0,0,0)^3]")
lambda1[1]=expand("[(3,0,0)^2/(0,1,1)]")
#By checking, this is the one used to get the correct order of A1 in LE7 \downarrow A14
lambda1[1]=[(4,0,0),(0,1,1),(0,0,0),(0,0,0),(0,0,0)]


#8&      $ (6,0,0)/(0,1,1)/$		&  $
a[15]=expand("[(0,10,0,0)/(1,6,1,0)/(0,6,1,1)/(1,6,0,1)/(0,6,0,0)^2/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)/(0,0,1,1)/(1,0,0,1)/(1,0,1,0)]")
lambda1[15]=expand("[(6,0,0)/(0,1,1)/(0,0,0)]")


#9&      $ (4,0,0)/(1,1,0)/$		& $
a[16]=expand("[(0,6,0,0)/(0,4,0,2)/(1,4,0,1)/(0,5,1,0)/(1,3,1,1)/(0,3,1,0)/(0,1,1,2)/(1,2,0,1)/(2,0,0,0)/(0,2,0,0)^2/(0,0,2,0)/(0,0,0,2)]")
lambda1[16]=expand("[(4,0,0)/(1,1,0)/(0,0,2)]")


#10&      $ (4,0,0)/(0,1,1)/$		&  $
a[17]=expand("[(0,6,0,0)^2/(1,4,1,0)/(1,4,0,1)/(0,4,1,1)/(0,4,0,0)/(1,2,1,0)/(1,2,0,1)/(0,2,1,1)/(2,0,0,0)/(0,2,0,0)^3/(0,0,2,0)/(0,0,0,2)]")
lambda1[17]=expand("[(4,0,0)/(0,1,1)/(2,0,0)]")


#11&      $ (4,0,0)/(0,1,1)/$		&  $
a[18]=expand("[(0,6,0,0)/(0,4,1,1)/(0,4,0,2)/(1,3,0,2)/(1,3,1,1)/(1,3,0,0)/(0,0,1,3)/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)^2/(0,0,1,1)]")
lambda1[18]=expand("[(4,0,0)/(0,1,1)/(0,0,2)]")


#12&      $ (4,0,0)/(0,1,0)^2/$		&  $
a[19]=expand("[(0,6,0,0)/(0,4,0,2)/(0,4,1,0)^2/(1,3,1,1)/(1,3,0,1)^2/(0,0,1,2)^2/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)/(0,0,0,0)^3]")
lambda1[19]=expand("[(4,0,0)/(0,1,0)^2/(0,0,2)]")


#13&      $ (4,0,0)/(0,1,1)/$		& $
             
a[1]=expand("[(0,6,0,0)/(0,4,0,0)^3/(1,3,0,1)^2/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)/(0,4,1,1)/(1,3,1,0)^2/(0,0,1,1)^3/(0,0,0,0)^3]")
#lambda1[1]=[expand("[(4,0,0)/(0,1,1)/(0,0,0)^3]")


#14&      $ (4,0,0)/(0,2,0)/$		&  $
a[20]=expand("[(0,6,0,0)/(0,4,2,0)/(0,4,0,2)/(1,3,1,1)^2/(0,4,0,0)/(0,0,2,2)/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)^2/(0,0,0,2)^2]")
lambda1[20]=expand("[(4,0,0)/(0,2,0)/(0,0,2)/(0,0,0)]")


#15&      $ (1,1,0)^2/(0,1,1)$		&  $
a[4]=expand("[(0,2,2,0)/(0,1,2,1)^2/(2,0,0,0)/(0,2,0,0)^3/(0,0,2,0)^4/(0,0,0,2)/(0,1,0,1)^2/(0,0,0,0)/(1,0,3,0)/(1,2,1,0)/(1,1,1,1)^2/(1,0,1,0)^3  ]")
lambda1[4]=expand("[(1,1,0)^2/(0,1,1)]")



#16&      $ (1,1,0)/(1,0,1)/$		&  $
a[21]=expand("[(0,2,1,1)/(0,1,2,1)/(0,1,1,2)/(2,0,0,0)/(0,2,0,0)^2/(0,0,2,0)^2/(0,0,0,2)^2/(0,1,1,0)/(0,1,0,1)/(0,0,1,1)/(1,2,1,0)/(1,0,2,1)/(1,1,0,2)/(1,1,0,0)/(1,0,1,0)/(1,0,0,1)/(1,1,1,1)]")
lambda1[21]=expand("[ (1,1,0)/(1,0,1)/(0,1,1)]")



#17&      $ (1,1,0)^2/(0,0,1)^2$		&  $
a[8]=expand("[(0,2,2,0)/(1,2,0,0)^2/(1,0,2,0)^2/(2,0,0,0)/(0,2,0,0)^3/(0,0,2,0)^3/(0,0,0,2)/(1,1,1,1)^2/(0,1,1,1)^4/(1,0,0,0)^4/(0,0,0,0)^4]")
lambda1[8]=expand("[(1,1,0)^2/(0,0,1)^2]")


a[34]=expand("[(0,2,2,0)/(2,0,0,0)/(0,2,0,0)^3/(0,0,2,0)^3/(0,0,0,2)/(0,1,1,1)^4/(0,0,0,0)^4/(1,2,0,1)/(1,0,2,1)/(1,1,1,0)^4/(1,0,0,1)^2]")
lambda1[34]=expand("[(1,1,0)^2/(0,0,1)^2]")



#18&      $ (1,1,0)/(0,1,1)/$		&  $
a[22]=expand("[(0,1,2,1)/(0,0,1,2)^2/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)^2/(0,0,0,2)^2/(0,1,1,1)^2/(0,1,0,1)/(0,0,1,0)^2/(0,0,0,0)^3/(1,1,1,1)/(1,0,2,0)^2/(1,0,1,2)/(1,1,0,1)^2/(1,0,1,0)/(1,0,0,0)^2 ]")
lambda1[22]=expand("[(1,1,0)/(0,1,1)/(0,0,1)^2]")



a[22]=expand("[(0,1,2,1)/(0,0,1,2)^2/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)^2/(0,0,0,2)^2/(0,1,1,1)^2/(0,1,0,1)/(0,0,1,0)^2/(0,0,0,0)^3/(1,1,1,0)^2/(1,1,0,2)/(1,1,0,0)/(1,0,2,1)/(1,0,0,1)/(1,0,1,1)^2]")
lambda1[22]=expand("[(1,1,0)/(0,1,1)/(0,0,1)^2]")




#19&      $ (1,1,0)/(0,1,0)^2/$		&  $
#a[12]=expand("[(0,1,2,0)^2/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)^2/(0,0,0,2)/(0,0,1,1)^4/(0,1,1,1)^2/(0,1,0,0)^2/(0,0,0,0)^6/(1,1,1,1)/(1,0,2,0)^2/(1,1,0,0)^4/(1,0,1,1)^2/(1,0,0,0)^2 ]")


#a[20]=expand("[(0,1,2,0)^2/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)^2/(0,0,0,2)/(0,0,1,1)^4/(0,1,1,1)^2/(0,1,0,0)^2/(0,0,0,0)^6/(1,0,2,1)/(1,1,1,0)^2/(1,1,0,1)^2/(1,0,0,1)/(1,0,1,0)^4 ]")


#20&      $ (1,0,0)^2/(0,1,0)^2/$		&  $
a[2]=expand("[  (2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)/(0,1,1,0)^4/(0,1,0,1)^4/(0,0,1,1)^4/(0,0,0,0)^9/(1,1,1,0)^2/(1,1,0,1)^2/ (1,0,0,0)^8/(1,0,1,1)^2/]")
lambda1[2]=expand("[(1,0,0)^2/(0,1,0)^2/(0,0,1)^2]")




a[2]=expand("[  (2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)/(0,1,1,0)^4/(0,1,0,1)^4/(0,0,1,1)^4/(0,0,0,0)^9/ (1,1,1,1)/(1,1,0,0)^4/(1,0,1,0)^4/(1,0,0,1)^4]")
lambda1[2]=expand("[(1,0,0)^2/(0,1,0)^2/(0,0,1)^2]")



#21&      $ (1,1,0)^2/(0,0,2)/$		&  $
a[23]=expand("[  (0,2,2,0)/(1,2,0,1)/(1,0,2,1)/(0,1,1,2)^2/(2,0,0,0)/(0,2,0,0)^3/(0,0,2,0)^3/(0,0,0,2)^2/(1,1,1,1)^2/(1,0,0,1)^2/(0,1,1,0)^2/(0,0,0,0)]")
lambda1[23]=expand("[(1,1,0)^2/(0,0,2)/(0,0,0)]")


#22&      $ (1,1,0)/(0,1,1)/$		&  $
a[24]=expand("[(0,0,1,3)/(0,1,2,1)/(0,1,1,2)/(1,1,0,2)/(1,0,1,2)^2/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)^2/(0,0,0,2)^3/(1,1,1,1)/(1,1,0,0)/(1,0,1,0)/(1,0,0,1)/(0,1,1,0)/(0,1,0,1)/(0,0,1,1)^2]")
a[24]=expand("[(2,0,0,0)/(0,2,0,0)/(0,3,1,0)/(0,1,1,0)^2/(0,2,1,1)/(0,2,0,0)^2/(0,0,2,0)^2/(0,1,2,1)/(0,1,0,1)/(0,0,0,2)/(0,0,1,1)/(1,2,1,0)/(1,0,1,0)/(1,1,1,1)/(1,2,0,1)/(1,0,0,1)/(1,1,2,0)/(1,1,0,0)]")
lambda1[24]=expand("[(1,1,0)/(0,1,1)/(0,0,2)/(0,0,0)]")


#23&      $ (1,1,0)/(1,0,0)^2/$		&  $
a[25]=expand("[(0,1,1,2)/(0,2,1,0)^2/(0,1,0,2)^2/(2,0,0,0)/(0,2,0,0)^2/(0,0,2,0)/(0,0,0,2)^2/(0,1,1,0)/(0,0,1,0)^2/(0,1,0,0)^2/(1,2,0,1)/(1,0,0,1)/(1,1,0,1)^2/(1,0,1,1)^2/(1,1,1,1)/(0,0,0,0)^3]")
lambda1[25]=expand("[(1,1,0)/(1,0,0)^2/(0,0,2)/(0,0,0)]")


#24&      $ (0,1,1)/(1,0,0)^2/$		&  $
a[26]=expand("[(3,0,0,0)^2/(2,1,1,0)/(2,1,0,1)/(2,0,1,1)/(2,0,0,0)^3/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)/(1,1,1,0)^2/(1,1,0,1)^2/(1,0,1,1)^2/(0,1,1,0)/ (0,1,0,1)/(0,0,1,1)/(1,0,0,0)^4/(0,0,0,0)^3]")
lambda1[26]=expand("[(0,1,1)/(1,0,0)^2/(2,0,0)/(0,0,0)]")
a[26]=expand("[(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,1,1,1)^2/(0,1,1,2)/(0,1,1,0)/(0,0,0,2)/(0,0,0,0)^3/(0,0,0,3)^2/(0,0,0,1)^4/(0,0,0,2)^2/(1,1,0,1)^2/(1,1,0,2)/(1,1,0,0)/(1,0,1,2)/(1,0,1,0)/(1,0,1,1)^2]")

lambda1[26] =[(1,1,0),(0,0,1),(0,0,1),(0,0,2),(0,0,0)]


#25&      $ (1,0,0)^2/(0,1,0)^2/$		&  $
a[5]=expand("[(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)^2/(0,1,0,2)^2/(0,0,1,2)^2/(0,1,1,0)^4/(0,1,0,0)^2/(0,0,1,0)^2/(1,1,1,1)/(1,1,0,1)^2/(1,0,1,1)^2/ (1,0,0,1)^4/(0,0,0,0)^6]")
lambda1[5]=expand("[(1,0,0)^2/(0,1,0)^2/(0,0,2)/(0,0,0)]")


#26&      $ (1,1,0)/(0,1,1)/$		&  $
a[6]=expand("[(0,1,2,1)/(1,0,2,0)^2/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)^2/(0,0,0,2)/(1,1,1,0)^2/(1,1,0,1)^2/(1,0,1,1)^2/(0,1,1,0)^4/(0,1,0,1)/(0,0,1,1)^4/(1,0,0,0)^2/(0,0,0,0)^6]")
lambda1[6]=expand("[(1,1,0)/(0,1,1)/(0,0,0)^4]")


#27&      $ (1,1,0)/(0,0,1)^2/$		&  $
a[3]=expand("[(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)/(1,1,1,0)^2/(1,1,0,1)^2/(1,0,1,1)^2/(0,1,1,0)^4/(0,1,0,1)^4/(0,0,1,1)^4/(1,0,0,0)^8/(0,0,0,0)^9]")
a[3]=expand("[(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)/(0,1,1,1)^2/(0,1,1,0)^4/(0,0,0,1)^8/(1,1,0,1)^2/(1,1,0,0)^4/(1,0,1,1)^2/(1,0,1,0)^4/(0,0,0,0)^9]")
lambda1[3]=expand("[(1,1,0)/(0,0,1)^2/(0,0,0)^4]")



#28&      $ (1,1,0)/(0,2,0)/$		&    $
a[4]=expand("[(0,0,2,2)/(0,1,3,0)/(1,0,2,1)^2/(0,1,1,2)/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)^4/(0,0,0,2)^3/(1,1,1,1)^2/(1,0,0,1)^2/(0,1,1,0)^3/(0,0,0,0)  ]")
lambda1[4]=expand("[ (1,1,0)/(0,2,0)/(0,0,2)/(0,0,0)^2]")


#29&      $ (1,0,0)^2/(0,2,0)/$		&  $
a[8]=expand("[(0,2,2,0)/(1,2,0,0)^2/(1,0,2,0)^2/(2,0,0,0)/(0,2,0,0)^3/(0,0,2,0)^3/(0,0,0,2)/(1,1,1,1)^2/(0,1,1,1)^4/(1,0,0,0)^4/(0,0,0,0)^4]")
#lambda1[8]=expand("[(1,0,0)^2/(0,2,0)/(0,0,2)/(0,0,0)^2]")


#30&      $ (1,1,0)/(0,0,2)/$		&  $
a[7]=expand("[(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)^6/(0,1,1,2)/(0,1,1,0)^5/(1,1,0,1)^4/(1,0,1,1)^4/(0,0,0,0)^{10}]")
lambda1[7]=expand("[(1,1,0)/(0,0,2)/(0,0,0)^5]")


#31&      $ (2,0,0)/(0,2,0)/$		&  $
a[27]=expand("[(0,2,2,0)/(0,2,0,2)/(0,0,2,2)/(2,0,0,0)/(0,2,0,0)^4/(0,0,2,0)^4/(0,0,0,2)^4/(1,1,1,1)^4/(0,0,0,0)^3]")
lambda1[27]=expand("[(2,0,0)/(0,2,0)/(0,0,2)/(0,0,0)^3]")


#32& $(1,1,0)/(0,0,1)^4$ &$
a[7]=expand("[(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)^6/(0,1,1,2)/(0,1,1,0)^5/(1,1,0,1)^4/(1,0,1,1)^4/(0,0,0,0)^9/(0,0,0,0)]")
#lambda1[7]=expand("[(1,1,0)/(0,0,1)^4]")


#33& $(2,0,0)^2/(0,2,0)/$ & $ INCOMPLETE

#In case 28 to get full Le8 restriction:
#temp=expand("[(2,0,0,0,0)/(0,2,0,0,0)/(0,0,2,0,0)/(0,0,0,2,0)/(0,0,0,0,2)/(0,2,2,0,0)/(0,2,0,2,0)/(0,2,0,0,2)/(0,0,2,2,0)/(0,0,2,0,2)/(0,0,0,2,2)/(1,1,1,1,1)^2]")
#print("THIS IS FIXING OF CASE 28")
#temp2=diagA1(temp,2,3)
temp3=expand("[(0,4,0,0)/(0,2,2,0)^2/(0,2,0,2)^2/(1,2,1,1)^2/(0,0,2,2)/(0,2,0,0)^3/(0,0,2,0)/(0,0,0,2)/(2,0,0,0)/(1,0,1,1)^2/(0,0,0,0)]")
#print("dim of the new LE7 is "+str(dimChecker(temp3)))
#basistemp=[]
#basistemp.append(temp2)
#basistemp.append(temp3)
a[28]=expand("[(2,0,0,0)/(0,2,0,0)^3/(0,0,2,0)/(0,0,0,2)/(0,4,0,0)/(0,2,2,0)^2/(0,2,0,2)^2/(0,0,2,2)/(0,0,0,0) ]")
a[28]=temp3
#print("checking if coincide with previous fact:")
#o4=order(4)
#print(classifyIncomplete(a[28],basistemp,o4))
lambda1[28]=expand("[(2,0,0)^2/(0,2,0)/(0,0,2)]")


#34& $(1,1,0)/(0,0,2)^2$ & $
a[29]=expand("[(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)^7/(0,0,0,4)/(0,1,1,2)^2/(1,1,0,2)^2/(1,0,1,2)^2/(0,1,1,0)^2/(1,1,0,0)^2/(1,0,1,0)^2/(0,0,0,0)^2]")
lambda1[29]=expand("[(1,1,0)/(0,0,2)^2/(0,0,0)^2]")


#35& $(1,1,0)/(0,1,1)$ & $
a[30]=expand("[(0,1,3,0)/(0,0,3,1)/(0,1,2,1)/(1,1,2,0)/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)^4/(0,0,0,2)/(1,1,1,1)/(1,1,0,0)/(0,1,1,0)^2/(0,0,1,1)^2/(0,1,0,1)/ (1,0,3,0)/(1,0,2,1)/(1,0,1,0)^2/(1,0,0,1)]")
lambda1[30]=expand("[(1,1,0)/(0,1,1)/(0,2,0)/(0,0,0)]")


a[31]=expand("[(0,1,3,0)/(0,0,3,1)/(0,1,2,1)/(1,1,2,0)/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)^4/(0,0,0,2)/(1,1,1,1)/(1,1,0,0)/(0,1,1,0)^2/(0,0,1,1)^2/(0,1,0,1)/(1,0,3,0)^2/(1,0,1,0)^4]")
lambda1[31]=expand("[(1,1,0)/(0,1,1)/(0,2,0)/(0,0,0)]")


#36& $(1,0,0)^2/(0,1,1)$ & $
a[32]=expand("[(0,0,0,0)^3/(0,0,1,3)/(0,1,0,2)^2/(1,0,0,2)^2/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)^3/(1,0,1,1)^2/(0,1,1,1)^2/(0,0,1,1)^2/(0,1,0,0)^2/(1,0,0,0)^2/(1,1,1,1)/(1,1,0,2)/(1,1,0,0)]")
lambda1[32]=expand("[(1,0,0)^2/(0,1,1)/(0,0,2)/(0,0,0)]")



a[33]=expand("[(0,0,0,0)^3/(0,0,1,3)/(0,1,0,2)^2/(1,0,0,2)^2/(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)^3/(1,0,1,1)^2/(0,1,1,1)^2/(0,0,1,1)^2/(0,1,0,0)^2/(1,0,0,0)^2/(1,1,1,1)^2]")
lambda1[33]=expand("[(1,0,0)^2/(0,1,1)/(0,0,2)/(0,0,0)]")


# 35 : test 110/101/100^2
a[35]=expand("[(2,0,0,0)/(0,2,0,0)^3/(0,0,2,0)/(0,0,0,2)/(0,2,1,1)/(0,0,1,1)/(0,2,1,0)^2/(0,0,1,0)^2/(0,2,0,1)^2/(0,0,0,1)^2/(0,0,0,0)^3/(1,2,0,0)^2/(1,0,0,0)^2/(1,2,0,1)/(1,0,0,1)/(1,2,1,0)/(1,0,1,0)/(1,0,1,1)^2]")
lambda1[35]=expand("[(1,1,0)/(1,0,1)/(1,0,0)^2]")


#a[35]=expand("[(2,0,0,0)/(0,2,0,0)^3/(0,0,2,0)/(0,0,0,2)/(0,2,1,1)/(0,0,1,1)/(0,2,1,0)^2/(0,0,1,0)^2/(0,2,0,1)^2/(0,0,0,1)^2/(0,0,0,0)^3/(1,3,0,0)/(1,1,0,0)^2/(1,1,0,1)^2/(1,1,1,0)^2/(1,1,1,1) ]")


# 36 : 15 other option&      $ (1,1,0)^2/(0,1,1)$		&  $
a[36]=expand("[(0,2,2,0)/(0,1,2,1)^2/(2,0,0,0)/(0,2,0,0)^3/(0,0,2,0)^4/(0,0,0,2)/(0,1,0,1)^2/(0,0,0,0)/(1,0,3,0)/(1,1,2,0)/(1,1,0,0)/(1,2,0,1)/(1,0,0,1)^2/(1,0,2,1)/(1,0,1,0)^2  ]")
lambda1[36]=expand("[(1,1,0)^2/(0,1,1)]")



#Deal with 37 and 38 seperatly
#37&$A_1D_6$ & $(0,(2,0,0,0)/(0,2,0,0)/$ & $
a[37]=expand("[(2,0,0,0)/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)/(2,2,0,0)/(2,0,2,0)/(2,0,0,2)/(0,2,2,0)/(0,2,0,2)/(0,0,2,2)/(1,1,1,1)^4/(0,0,0,0)^3]")
#lambda1[11]=[expand("[]")





#38&$A_1D_6$& $(\underline{1},(\underline{2},0,0,0)/(\underline{0},2,0,0)/$& $
a[38]=expand("[(2,1,1,1)^2/(0,1,1,1)^2/(2,0,0,0)^2/(0,2,0,0)/(0,0,2,0)/(0,0,0,2)/(2,2,0,0)/(2,0,2,0)/(2,0,0,2)/(0,2,2,0)/(0,2,0,2)/(0,0,2,2)]")
#lambda1[11]=[expand("[]")




tester28=expand("(0,2,0,0,0,0)/(0,0,2,0,0,0)/(0,0,0,2,0,0)/(0,0,0,0,2,0)/(0,0,0,0,0,2)/(0,0,2,2,0,0)/(0,0,2,0,2,0)/(0,0,2,0,0,2)/(0,0,0,2,2,0)/(0,0,0,2,0,2)/ (0,0,0,0,2,2)/(0,1,1,1,1,1)^2/(2,0,0,0,0,0)/(1,1,2,0,0,0)/(1,1,0,2,0,0)/(1,1,0,0,2,0)/(1,1,0,0,0,2)/(1,0,1,1,1,1)^2]")
t28=diagA1(tester28,2,3)


t=[(0,2,1,3),(2,3,4,5),(6,5,4,2),(0,1,1,1)]


orderList=order(3)
basisTest=[[0]]
problems=[]




basisTest=[[0]]
for i in range(1,37):
    x=wedge2(lambda1[i])
    y=lambda2fct(a[i])
    lambda2[i]=y
    lambda5[i] = lambda5fct(a[i])

    basisTest.append(y)
    temp=checker(x,basisTest,orderList)
    if temp==-1:
        print("////////////")
        problems.append(i)
        print(i)
        print("Problem")
#    else:
#        print("Match!")


#print(problems)


orderList5=order(5)
basisA15=[[0]]

for i in range(1,37):
    #print(latex(lambda1[i]))
    #print(latex(lambda2[i]))
    #print(latex(lambda5[i]))
    LE8[i]=[]
    LE8[i]=concat([(1,1)],lambda1[i])
    LE8[i]=LE8[i]+concat([(1,0)],lambda5[i])
    LE8[i]=LE8[i]+[(2,0,0,0,0),(0,2,0,0,0)]
    LE8[i]=LE8[i]+concat([(0,0)],lambda2[i])
    LE8[i]=LE8[i]+concat([(0,1)],lambda5[i])
    #print(latex(LE8[i]))
    if dimChecker(LE8[i])!=248:
        print("LE8 does not have dim 248 at i=")
        print(i)
##        print(latex(lambda1[i]))
##        print(latex(lambda2[i]))
##        print(latex(lambda5[i]))
    temp=checker(LE8[i],basisA15,orderList5)

    #if temp!=-1:
    #    print("problem two of the LE8 are equal")
    #if i==28:
    #    basisA15.append(t28)
    
    basisA15.append(LE8[i])
    


LE8[37]=expand("[(0,0,0,0,0)^3/(0,2,0,0,0)/(0,0,2,0,0)/(0,0,0,2,0)/(0,0,0,0,2)/(0,2,2,0,0)/(0,2,0,2,0)/(0,2,0,0,2)/(0,0,2,2,0)/(0,0,2,0,2)/ (0,0,0,2,2)/(0,1,1,1,1)^4/(2,0,0,0,0)/(1,2,0,0,0)^2/(1,0,2,0,0)^2/(1,0,0,2,0)^2/(1,0,0,0,2)^2/(1,1,1,1,1)^2]")

basisA15.append(LE8[37])



LE8[38]=expand("[(0,2,0,0,0)/(0,2,0,0,0)/(0,0,2,0,0)/(0,0,0,2,0)/(0,0,0,0,2)/(0,2,2,0,0)/(0,2,0,2,0)/(0,2,0,0,2)/(0,0,2,2,0)/(0,0,2,0,2)/ (0,0,0,2,2)/(0,2,1,1,1)^2/(0,0,1,1,1)^2/(2,0,0,0,0)/(1,3,0,0,0)/(1,1,0,0,0)/(1,1,2,0,0)/(1,1,0,2,0)/(1,1,0,0,2)/(1,1,1,1,1)^2]")
LE8[38]=diagA1(tester28,1,2)
basisA15.append(LE8[38])
print(len(basisA15))


#Testing new elements
#This is as an alternative to case 8 with a different lambda5, turns out same as 34
temp=expand("[(1, 1, 1, 1, 0)^2/(1, 1, 0, 0, 1)^2/(1, 0, 2,0,1)/(1, 0,0,0,1 )^2/(1, 0,1,1,0 )^4/(1, 0,0,2,1 )/(2, 0, 0, 0, 0)/(0, 2, 0, 0, 0)/(0, 0, 2, 2, 0)/(0, 0, 2, 0, 0)^3/(0, 0, 0, 2, 0)^3/(0, 0, 0, 0, 2)/(0, 0, 1, 1, 1)^4/(0, 0, 0, 0, 0)^4/( 0,1, 2,0,1)/(0,1,0,0,1 )^2/(0,1,1,1,0 )^4/(0,1,0,2,1 )]")
#basisA15.append(temp)

#Potential additional elements of basis A15

#case 8 was (17) and (29), this is (29)===> this is basisA15[39]
l1t=expand("[(1,0,0)^2/(0,2,0)/(0,0,2)/(0,0,0)^2]")
l2t=wedge2(l1t)
#print("l2t:")
#print(l2t)
l5t=expand("[(1,1,1)^2/(0,1,1)^4]")
Lt=[]
Lt=concat([(1,1)],l1t)
Lt=Lt+concat([(1,0)],l5t)
Lt=Lt+[(2,0,0,0,0),(0,2,0,0,0)]
Lt=Lt+concat([(0,0)],l2t)
Lt=Lt+concat([(0,1)],l5t)
print("Case 8: checker:")
print(dimChecker(Lt))
print(checker(Lt,basisA15,orderList5))
basisA15.append(Lt)

#Case 1 was (7) and (13), this is (7)====> basis A15[40 and 41] 
l1t=expand("[(3,0,0)^2/(0,1,1)]")
l2t=wedge2(l1t)
l5t=expand("[(3,1,0)^2/(4,0,1)/(0,0,1)^3]")
l5tb=expand("[(3,0,1)^2/(4,1,0)/(0,1,0)^3]")
Lt=[]
Lt=concat([(1,1)],l1t)
Lt=Lt+concat([(1,0)],l5t)
Lt=Lt+[(2,0,0,0,0),(0,2,0,0,0)]
Lt=Lt+concat([(0,0)],l2t)
Lt=Lt+concat([(0,1)],l5t)
#print("checker:")
#print(dimChecker(Lt))
#print(checker(Lt,basisA15,orderList5))
basisA15.append(Lt)


Lt=[]
Lt=concat([(1,1)],l1t)
Lt=Lt+concat([(1,0)],l5tb)
Lt=Lt+[(2,0,0,0,0),(0,2,0,0,0)]
Lt=Lt+concat([(0,0)],l2t)
Lt=Lt+concat([(0,1)],l5tb)
#print("checker:")
#print(dimChecker(Lt))
#print(checker(Lt,basisA15,orderList5))
basisA15.append(Lt)

#Case 7 was (30) and this is (32)====> basis[42]
l1t=expand("[(1,1,0)/(0,0,1)^4]")
l2t=wedge2(l1t)
#print(l2t)
l5t=expand("[(1,0,1)^4/(0,1,2)/(0,1,0)^5]")
l5tb=expand("[(0,1,1)^4/(1,0,0)^5/(1,0,2)]")
Lt=[]
Lt=concat([(1,1)],l1t)
Lt=Lt+concat([(1,0)],l5t)
Lt=Lt+[(2,0,0,0,0),(0,2,0,0,0)]
Lt=Lt+concat([(0,0)],l2t)
Lt=Lt+concat([(0,1)],l5t)
#print("checker:")
#print(dimChecker(Lt))
#print(checker(Lt,basisA15,orderList5))
basisA15.append(Lt)
#Second option is the same as the first
Lt=[]
Lt=concat([(1,1)],l1t)
Lt=Lt+concat([(1,0)],l5tb)
Lt=Lt+[(2,0,0,0,0),(0,2,0,0,0)]
Lt=Lt+concat([(0,0)],l2t)
Lt=Lt+concat([(0,1)],l5tb)
#print("checker:")
#print(dimChecker(Lt))
#print(checker(Lt,basisA15,orderList5))
#basisA15.append(Lt)

#Case 19 which was conjugate to case 25 or 26 ==> basis[43 and 44]
l1t=expand("[(1,1,0)/(0,1,0)^2/(0,0,1)^2]")
l2t=wedge2(l1t)
print(l2t)
l5t=expand("[(1,1,0)^2/(1,0,1)^2/(0,2,1)/(0,0,1)/(0,1,0)^4]")
l5tb=expand("[(1,1,1)/(1,0,0)^4/(0,2,0)^2/(0,0,0)^2/(0,1,1)^2]")
Lt=[]
Lt=concat([(1,1)],l1t)
Lt=Lt+concat([(1,0)],l5t)
Lt=Lt+[(2,0,0,0,0),(0,2,0,0,0)]
Lt=Lt+concat([(0,0)],l2t)
Lt=Lt+concat([(0,1)],l5t)
print("checker:")
print(dimChecker(Lt))
print(checker(Lt,basisA15,orderList5))
basisA15.append(Lt)


Lt=[]
Lt=concat([(1,1)],l1t)
Lt=Lt+concat([(1,0)],l5tb)
Lt=Lt+[(2,0,0,0,0),(0,2,0,0,0)]
Lt=Lt+concat([(0,0)],l2t)
Lt=Lt+concat([(0,1)],l5tb)
print("checker:")
print(dimChecker(Lt))
print(checker(Lt,basisA15,orderList5))
basisA15.append(Lt)












#A15 in E7

print("A15 in A16 obtained by removin the ith A1")
for i in range(1,len(basis2)):
    print("i="+str(i))
    a[i]=removeA1(basis2[i],1)
    #print(dimChecker(a[i]))
    print(checker(removeFirstA1(basis2[i]),basisA15,orderList5))
##
##
##print("Fixing case 4")
##for i in range(1,7):
##    print("removing A_1 number"+str(i))
##    a[4]=removeA1(basisA16[4],i)
##    #print(dimChecker(a[i]))
##    print(checker(removeA1(basisA16[4],i),basisA15,orderList5))
##
##print("Fixing case 8")
##for i in range(1,7):
##    print("removing A_1 number"+str(i))
##    a[8]=removeA1(basisA16[8],i)
##    #print(dimChecker(a[i]))
##    print(checker(removeA1(basisA16[8],i),basisA15,orderList5))
##
##print("Fixing case 9")
##for i in range(1,7):
##    print("removing A_1 number"+str(i))
##    a[9]=removeA1(basisA16[9],i)
##    #print(dimChecker(a[i]))
##    print(checker(removeA1(basisA16[9],i),basisA15,orderList5))
##    



#A15 in A16 in A1E7 with diag
print("A15 in A16 with diagonal between \\bar{A1} and the ith A1")

pb=[1,2,5,6,8,9]
pb2=[[2,3,4],[2,3,5],[2,3,5,6],[2,3,5,6],[2,3,4,6],[2,3,4]]
pb=[]
for j in range(0,len(pb)):
    print("//////////////")
    print("Case "+str(pb[j]))
    for i in pb2[j]:
        print("i= "+str(i))
        tester = diagA1(basisA16[pb[j]],1,i)
        #print(latex(tester))
        print("Corresponds to :" +str(checker(tester,basisA15,orderList5)))



#i=1
#print(latex2(lambda1[i]))
#print(latex2(basisA15[i]))
#print("lambda_1:")
#print(latex2(lambda1[7]))
#print("LE8 38 ")
#print(latex2((basisA15[38])))

#print("len(lambda1)"+str(len(lambda1)))

for i in range(1,1):
    printLE8(i,latex2(lambda1[i]),latex2(basisA15[i]))
    print(" \\thickhline")

#Adding the 39th case of table A15inE7 (actually nb 41 right now)
temp=expand("[(2, 0, 0, 0, 0)^2/(0, 2, 0, 0, 0)^2/(0, 0, 2, 0, 0)^2/(0, 0, 0, 2, 0)^2/(0, 0, 0, 0, 2)^2/(0, 2, 0, 2, 0)/(0, 2, 0, 0, 2)/(0, 0, 2, 2, 0)/(0, 0, 2, 0, 2)/(0, 0, 0, 2, 2)/(1, 1, 1, 1, 1)^4/(0, 2, 2, 0, 0)/(2, 2, 0, 0, 0)/(2, 0, 2, 0, 0)/(2, 0, 0, 2, 0)/(2, 0, 0, 0, 2)]")
basisA15.append(temp)
#print("This the actual nb of new element: "+str(len(basisA15)))


































   


